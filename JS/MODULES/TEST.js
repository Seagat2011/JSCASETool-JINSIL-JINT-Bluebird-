
var XFE = [ /* TODO: sample inputs for generate_module() => bbmodules[] */
/*
"entity",
"=>",
"[",
"gpi",
"<=",
"_",
"=>",
"godparent",
"=>",
"indent",
"<=",
"callstack",
"=>",
"[",
"0",
"]",
"=>",
"indent",
"<=",
"indent",
"]",
*/
    "[", 
    "gpi", 
    "<=", 
    "_", 
    "=>", 
    "godparent", 
    "=>", 
    "indent", 
    "<=", 
    "callstack", 
    "=>", 
    "[", 
    "0", 
    "]", 
    "=>", 
    "indent", 
    "<=", 
    "indent", 
    "]", 
    "<=", 
    "entity", 
/*
"__",
"<=",
"entity",
"=>",
"godparent",
"=>",
"indent",
"<=",
"indent",
/*
"[",
"__",
"]",
"<=",
"entity",
/*
"__",
"=>",
"[",
"gpi",
"]",
"=>",
"[",
"gpl",
"]",
"=>",
"[",
"gpc",
"]",
"=>",
"unshift",
/*
"entity",
"=>",
"gpi",
"<=",
"gpi",
/*
"__",
"<=",
"entity",
"=>",
"gpi",
"<=",
"gpi",
/*
"__",
"<=",
"entity",
"=>",
"gpi",
/*
"entity",
"=>",
"godparent",
"=>",
"indent",
"<=",
"indent",
/*
"__",
"<=", 
"entity",
/*
'entity',
'=>',
'godparent',
'=>',
'indent',
/*
"entity",
"=>",
"gpi",
/*
 "",
 "(",
 "indent<1",
 ")",
 "{/n",
 "callstack",
 "=",
 "updatecallstack",
 "(",
 "_",
 "",
 "",
 "",
 "",
 ",",
 "callstack",
 ",",
 "indent",
 ")",
 "/n}/n",
 "(",
 "indent<2",
 ")",
 "{/n",
 "(",
 "last!=indent",
 "",
 "",
 ")",
 "{/n",
 "callstack",
 "<=",
 "updatecallstack",
 "(",
 "_",
 ",",
 "callstack",
 ",",
 "indent",
 ")",
 "/n",
 "__",
 "<=",
 "(",
 "entity",
 ")",
 "=>",
 "[",
 "gpi",
 "<=",
 "_",
 "=>",
 "godparent",
 "=>",
 "indent",
 "<=",
 "callstack",
 "=>",
 "[",
 "0",
 "]",
 "=>",
 "indent",
 "]",
 "=>",
 "[",
 "gpl",
 "<=",
 "_",
 "=>",
 "godparent",
 "=>",
 "level",
 "<=",
 "callstack",
 "=>",
 "[",
 "0",
 "]",
 "=>",
 "level",
 "]",
 "=>",
 "[",
 "gpc",
 "<=",
 "_",
 "=>",
 "godparent",
 "=>",
 "codebody",
 "<=",
 "5",
 "]",
 "=>",
 "push",
 "(",
 "[",
 "minor_tab+'this",
 "[",
 "\"'",
 ",",
 "w",
 ",",
 "'\"",
 "]",
 "=>",
 "(",
 "'",
 ",",
 "[",
 "]",
 ",",
 "'",
 ")",
 "{\\n'",
 ",",
 "[",
 "]",
 ",",
 "'\\n'+minor_tab+'}\\n'",
 "]",
 ")",
 "/n",
 "}/n",
 "__",
 "=>",
 "[",
 "indent",
 "]",
 "=>",
 "push",
 "(",
 "[",
 "_",
 "=>",
 "parent",
 "=>",
 "s_name",
 "<=",
 "callstack",
 "=>",
 "[",
 "0",
 "]",
 "=>",
 "s_name",
 "+",
 "'.'",
 ",",
 "w",
 ",",
 "'",
 "(",
 "'",
 ",",
 "[",
 "]",
 ",",
 "'",
 ")",
 "'",
 ",",
 "'\\n'",
 "]",
 ")",
 "/n}",
 "/n",
 "(",
 "indent",
 ")",
 "{/n",
 "(",
 "last!=",
 "<=",
 "indent",
 ")",
 "{/n",
 "callstack",
 "<=",
 "updatecallstack",
 "(",
 "_",
 ",",
 "callstack",
 ",",
 "indent",
 ")",
 "/n",
 "__",
 "=>",
 "[",
 "gpi",
 "]",
 "=>",
 "[",
 "gpl",
 "]",
 "=>",
 "[",
 "gpc",
 "]",
 "=>",
 "unshift",
 "(",
 "[",
 "minor_tab+'this",
 "[",
 "\"'",
 ",",
 "w",
 ",",
 "'\"",
 "]",
 "=>",
 "(",
 "'",
 ",",
 "[",
 "]",
 ",",
 "'",
 ")",
 "{\\n'",
 ",",
 "[",
 "]",
 ",",
 "'\\n'+minor_tab+'}\\n'",
 "]",
 ")",
 "/n",
 "}/n",
 "__",
 "=>",
 "[",
 "gpi",
 "]",
 "=>",
 "[",
 "gpl",
 "]",
 "<=",
 "set_gparent_codebody",
 "(",
 "_",
 ",",
 "__",
 "=>",
 "[",
 "gpi",
 "]",
 "=>",
 "[",
 "gpl",
 "]",
 ",",
 "w",
 ",",
 "[",
 "major_tab+'this.'",
 ",",
 "w",
 ",",
 "'",
 "(",
 "'",
 ",",
 "[",
 "]",
 ",",
 "'",
 ")",
 "'",
 ",",
 "'\\n'",
 "]",
 ",",
 "indent",
 ")",
 "/n}"
*/
]

/*
// library.js
ga_.. = 0       // globals ..
g_..(..)
library(..)     // constructor (first-use)
ma_.. = 0       // non-prototype members ..
m_..(..)
..(..)          // prototype members ..
a_.. = 0


a(a,b)
 b(a,b)
  c(a,b)
d(a,b)
 e(a,b)
  f(a,b)


// main.js
main(a,b,c)
Parse()
 deserialize()
  reload()
 printError()
FilterKeywords()
 liftSpelling()
  checkSpelling()
 saveKeyword()
Parse()
 serialize()
  unload()
  

// JS_BLAZE_EDITOR.js
g_globalProperty(a, b)
 attachEvent(id, obj)
 m_show()
 showResults()
ga_globalAttribute
JS_BLAZE_EDITOR(a, b, c)
a_attributeNeedsRefresh
refresh()
ma_memberAttributeID
m_memberFromTextArea(id)
 getDocumentID(id)
 attachListener(w, cb)
*/